name: CI Build

on:
#  push:
#    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-2019
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.2.0

    - name: Clear NuGet Packages
      run: nuget locals all -clear
    
    - name: Restore NuGet Packages
      run: nuget restore "Open VTT.sln"
      
    - name: Build the Solution in all formats
      run: |
        msbuild "Open VTT.sln" /property:Configuration=Debug /property:Platform="Any CPU"
        msbuild "Open VTT.sln" /property:Configuration=Release /property:Platform="Any CPU"
        msbuild "Open VTT.sln" /property:Configuration=Debug /property:Platform=x64
        msbuild "Open VTT.sln" /property:Configuration=Release /property:Platform=x64

    - name: Pack Artifacts
      run: |
        cd "Open VTT"
        cd bin
        tar.exe -a -c -f "Debug Any CPU.zip" Debug
        tar.exe -a -c -f "Release Any CPU.zip" Release
        tar.exe -a -c -f "Debug x64.zip" "Debug x64"
        tar.exe -a -c -f "Release x64.zip" "Release x64"
        mkdir Artifacts
        move "Debug Any CPU.zip" Artifacts
        move "Release Any CPU.zip" Artifacts
        move "Debug x64.zip" Artifacts
        move "Release x64.zip" Artifacts

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: Artifacts
        path: "Open VTT\\bin\\Artifacts"

    #sadly only works on linux :c
    # - name: Create release
      # uses: Roang-zero1/github-create-release-action@v2
      # env:
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # - name: Upload release artifacts
      # uses: Roang-zero1/github-upload-release-artifacts-action@v2
      # with:
        # args: "Open VTT\\bin\\Artifacts"
      # env:
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}